@model PagedList.PagedList<HutechDriver.Models.EF.Contact>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Tuyển dụng";
    Layout = "~/Areas/Manager/Views/Shared/_Layout.cshtml";
}

@section naviheader{
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/manager/home" class="nav-link">Trang chủ</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/manager/category" class="nav-link">@ViewBag.Title</a>
        </li>
    </ul>}

<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
              
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item active">@ViewBag.Title</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<!-- Main content -->
<section class="content">

    <!-- Default box -->
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Danh sách @ViewBag.Title</h3>
        </div>

        <div class="card-body">
            <div class="row">
                <div class="col-6">
                    @using (Html.BeginForm("Index", "newdriver", FormMethod.Get, new { }))
                    {
                        <div class="input-group input-group-sm">
                            @Html.TextBox("SearchText", "", new { @class = "form-control" })
                            <span class="input-group-append">
                                <button type="submit" class="btn btn-info btn-flat">Tìm kiếm</button>
                            </span>
                        </div>
                    }
                </div>
            </div>

            <table class="table table-bordered" id="tripTable">
                <thead>
                    <tr>
                        <th><input type="checkbox" id="SelectAll" /></th>
                        <th>STT</th>
                        <th>Tên</th>
                        <th>Email</th>
                        <th>SDT</th>
                        <th>Cccd&Cmnd</th>
                        <th>Địa chỉ</th>
                        <th>Avatar</th>
                        <th>Ngày gửi</th>
                        <th>Phỏng vấn</th>
                        <th>Tình trạng</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        var i = ((ViewBag.Page - 1) * ViewBag.PageSize) + 1;
                        foreach (var item in Model)
                        {

                            <tr id=" trow_@item.Id" data-widget="expandable-table" aria-expanded="false">
                                <td><input type="checkbox" class="cbkItem" value="@item.Id" /></td>
                                <td>@i</td>
                                <td>@item.Name</td>
                                <td>@item.Email</td>
                                <td>@item.PhoneNumber</td>
                                <td>@item.CCCDorCMND</td>
                                <td>@item.DiaChi</td>

                                <td>
                                    <img src="~/Content/ImagesAcc/@item.ImagePeople" class="zoomable-image" alt="Hình ảnh" onclick="zoomImage(this)" width="50" />
                                </td>

                                <td>@item.CreateDate.ToString("dd/MM/yyyy")</td>
                                <td>@(item.IsRead==1?"Đã phỏng vấn":"Chưa phỏng vấn")</td>
                                <td>@(item.IsStatus==1?"Duyệt":"Loại")</td>

                                <td>
                                    <button id="send-chat" type="button" data-id="@item.Id" class="btn btn-sm btn-success">Duyệt</button>
                                    <button id="send-chat-non" type="button" data-id="@item.Id" class="btn btn-sm btn-dark">Loại</button>
                                    <a href="#" data-id="@item.Id" class="btn btn-sm btn-danger btnDelete">Xóa</a>
                                </td>
                            </tr>
                            <tr class="expandable-body">
                                <td colspan="10">
                                    <p>

                                        Ảnh CCCD :  <img src="~/Content/ImagesAcc/@item.ImagePapers"   /> <br />
                                        Thông tin:     @item.Message

                                    </p>

                                </td>
                            </tr>
                            i++;
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="4">Không có bản ghi nào</td>
                        </tr>
                    }
                </tbody>
            </table>

            @Html.PagedListPager(Model, page => Url.Action("Index", new { page }))

        </div>
    </div>
    <!-- /.card -->

</section>
<!-- /.content -->

@section scripts{
    <script>
        $(document).ready(function () {

            $('body').on('click', '#BtnDeleteAll', function (e) {
                e.preventDefault();
                var str = "";
                var checkbox = $(this).parents('.card').find('tr td input:checkbox');
                var i = 0;
                checkbox.each(function () {
                    if (this.checked) {
                        checkbox.attr('selected', 'checked');
                        var _id = $(this).val();
                        if (i === 0) {
                            str += _id;
                        } else {
                            str += "," + _id;
                        }
                        i++;
                    } else {
                        checkbox.attr('selected', '');
                    }
                });
                $('body').on('click', '#btnLuu', function () {
                    var id = $('#txtOrderId').val();
                    var tt = $('#ddTrangThai').val();
                    $.ajax({
                        url: '/manager/order/UpdateTT',
                        type: 'POST',
                        data: { id: id, trangthai: tt },
                        success: function (res) {
                            if (res.Success) {
                                location.reload();
                            }
                        }
                    });
                });
                if (str.length > 0) {
                    var conf = confirm("Bạn có muốn xóa tất cả các tin tức không");
                    if (conf === true) {
                        $.ajax({
                            url: '/manager/newdriver/deleteAll',
                            type: "POST",
                            data: { ids: str },
                            success: function (rs) {
                                if (rs.success) {
                                    location.reload();
                                }
                            }
                        })
                    }
                }
            });

            $('body').on('change', '#SelectAll', function () {
                var checkStatus = this.checked;
                var checkbox = $(this).parents('.card-body').find('tr td input:checkbox');
                checkbox.each(function () {
                    this.checked = checkStatus;
                    if (this.checked) {
                        checkbox.attr('selected', 'checked');
                    } else {
                        checkbox.attr('selected', 'checked');
                    }
                });
            });
            $('body').on('click', '.btnDelete', function () {
                var id = $(this).data("id");
                var conf = confirm('Bạn có muốn xóa bản ghi này không');
                if (conf === true) {
                    $.ajax({
                        url: '/manager/newdriver/delete',
                        type: 'POST',
                        data: { id: id },
                        success: function (rs) {
                            if (rs.success) {
                                $('#trow_' + id).remove();
                            }
                        }
                    });
                }
            });



        });

         const sendBtns = document.querySelectorAll('#send-chat');
        sendBtns.forEach(sendBtn => {
            sendBtn.addEventListener('click', function(event) {
            const chatID = this.getAttribute('data-id');
            const url = '@Url.Action("Approve", "NewDriver")';
            $.ajax({
                type: "POST",
                url: url,
                data: { id: chatID} ,
                success: function (rs) {
                    alert('Đã phản hồi thành công!.');
                    location.reload(true);
                },
                error: function (rs) {
                    alert('Phản hồi không thành công!.');
                    location.reload(true);
                }
            });
        });
        });
         const sendBtnsNon = document.querySelectorAll('#send-chat-non');
        sendBtnsNon.forEach(sendBtn1 => {
            sendBtn1.addEventListener('click', function(event) {
            const chatID = this.getAttribute('data-id');
            const url = '@Url.Action("Fall", "NewDriver")';
            $.ajax({
                type: "POST",
                url: url,
                data: { id: chatID} ,
                success: function (rs) {
                    alert('Đã phản hồi thành công!.');
                    location.reload(true);
                },
                error: function (rs) {
                    alert('Phản hồi không thành công!.');
                    location.reload(true);
                }
            });
        });
        });

    </script>
    <style>
        .zoomed-image {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            max-width: 90%;
            max-height: 90%;
            z-index: 9999;
        }

        .zoomable-image {
            cursor: pointer;
        }

    </style>
    <script>
        function zoomImage(img) {
            var zoomedImg = document.createElement("img");
            zoomedImg.src = img.src;
            zoomedImg.alt = img.alt;
            zoomedImg.className = "zoomed-image";
            zoomedImg.onclick = function () {
                document.body.removeChild(this);
            };

            document.body.appendChild(zoomedImg);
        }

    </script>
}



